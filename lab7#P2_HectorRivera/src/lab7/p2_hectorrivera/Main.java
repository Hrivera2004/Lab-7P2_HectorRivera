/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//que grande
package lab7.p2_hectorrivera;

import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author hriverav
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu_tree = new javax.swing.JPopupMenu();
        jMenuItem_load = new javax.swing.JMenuItem();
        jMenuItem_RefreshTree = new javax.swing.JMenuItem();
        jPopupMenu_Table = new javax.swing.JPopupMenu();
        jMenuItem_clear = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jTextField_commands = new javax.swing.JTextField();
        jButton_enter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree_archivos = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_file = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_file = new javax.swing.JMenu();
        jMenuItem_createNew = new javax.swing.JMenuItem();
        jMenuItem_import = new javax.swing.JMenuItem();
        jMenu_window = new javax.swing.JMenu();
        jMenu_subwindow_clear = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem_subWindows_clear_CMD = new javax.swing.JMenuItem();
        jMenuItem_subwindow_refresh = new javax.swing.JMenuItem();
        jMenu_help = new javax.swing.JMenu();
        jMenuItem_help_product = new javax.swing.JMenuItem();
        jMenuItem_help_Commands = new javax.swing.JMenuItem();

        jMenuItem_load.setText("load");
        jMenuItem_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_loadActionPerformed(evt);
            }
        });
        jPopupMenu_tree.add(jMenuItem_load);

        jMenuItem_RefreshTree.setText("Refresh");
        jMenuItem_RefreshTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_RefreshTreeActionPerformed(evt);
            }
        });
        jPopupMenu_tree.add(jMenuItem_RefreshTree);

        jMenuItem_clear.setText("clear");
        jMenuItem_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clearActionPerformed(evt);
            }
        });
        jPopupMenu_Table.add(jMenuItem_clear);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jButton_enter.setText("Enter");
        jButton_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_enterMouseClicked(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Archivos");
        jTree_archivos.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree_archivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree_archivosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree_archivos);

        jTable_file.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "name", "category", "price", "aisle", "bin"
            }
        ));
        jTable_file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_fileMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_file);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_commands, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_enter, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_commands, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_enter, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenu_file.setText("File");

        jMenuItem_createNew.setText("New File");
        jMenuItem_createNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_createNewActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_createNew);

        jMenuItem_import.setText("Import File");
        jMenuItem_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_importActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_import);

        jMenuBar1.add(jMenu_file);

        jMenu_window.setText("window");

        jMenu_subwindow_clear.setText("Clear");

        jMenuItem1.setText("Clear table");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu_subwindow_clear.add(jMenuItem1);

        jMenuItem_subWindows_clear_CMD.setText("clear commandLine");
        jMenuItem_subWindows_clear_CMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_subWindows_clear_CMDActionPerformed(evt);
            }
        });
        jMenu_subwindow_clear.add(jMenuItem_subWindows_clear_CMD);

        jMenu_window.add(jMenu_subwindow_clear);

        jMenuItem_subwindow_refresh.setText("Refresh Tree");
        jMenu_window.add(jMenuItem_subwindow_refresh);

        jMenuBar1.add(jMenu_window);

        jMenu_help.setText("help");

        jMenuItem_help_product.setText("product structure");
        jMenuItem_help_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_help_productActionPerformed(evt);
            }
        });
        jMenu_help.add(jMenuItem_help_product);

        jMenuItem_help_Commands.setText("Commands");
        jMenuItem_help_Commands.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_help_CommandsActionPerformed(evt);
            }
        });
        jMenu_help.add(jMenuItem_help_Commands);

        jMenuBar1.add(jMenu_help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_importActionPerformed
        try {
            // TODO add your handling code here:
            JFileChooser file = new JFileChooser("./Archivos");
            file.setFileSelectionMode(JFileChooser.FILES_ONLY);
            int selection = file.showOpenDialog(this);
            if (selection == JFileChooser.APPROVE_OPTION) {
                File Selected = file.getSelectedFile();
                importFile(Selected);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Archivo no encontrado");
        }
    }//GEN-LAST:event_jMenuItem_importActionPerformed

    private void jMenuItem_createNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_createNewActionPerformed
        try {
            // TODO add your handling code here:
            newFile(JOptionPane.showInputDialog("Ingrese un nombre para su archivo"));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "No se creo su archivo");
        }
    }//GEN-LAST:event_jMenuItem_createNewActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem_subWindows_clear_CMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_subWindows_clear_CMDActionPerformed
        // TODO add your handling code here:
        clearCMD();
    }//GEN-LAST:event_jMenuItem_subWindows_clear_CMDActionPerformed

    private void jMenuItem_help_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_help_productActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Formato producto:"
                + "\n Integer , String , integer , Double , Integer , Integer");
    }//GEN-LAST:event_jMenuItem_help_productActionPerformed

    private void jMenuItem_help_CommandsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_help_CommandsActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "comandos:\n" +
"\n" +
"Para cargar la tabla: \n" +
"Comando:  ./load data.txt\n" +
"Para la creación de archivos:\n" +
"Comando:  ./create archivo.txt -single\n" +
"Para limpiar la tabla:\n" +
"Comando: ./clear\n" +
"Para cargar los árboles:\n" +
"Comando: ./refresh");
    }//GEN-LAST:event_jMenuItem_help_CommandsActionPerformed

    private void jTable_fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_fileMouseClicked
        // TODO add your handling code here:
        if (evt.getButton()==MouseEvent.BUTTON3) {
            jPopupMenu_Table.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable_fileMouseClicked

    private void jMenuItem_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jMenuItem_clearActionPerformed

    private void jTree_archivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree_archivosMouseClicked
        // TODO add your handling code here:
        if (evt.getButton()==MouseEvent.BUTTON3) {
            jPopupMenu_tree.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTree_archivosMouseClicked

    private void jMenuItem_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_loadActionPerformed
        // TODO add your handling code here:
        if (jTree_archivos.getSelectionPath().getLastPathComponent()!=null) {
            try {
                importFile((File)(((DefaultMutableTreeNode)jTree_archivos.getSelectionPath().getLastPathComponent()).getUserObject()));
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jMenuItem_loadActionPerformed

    private void jMenuItem_RefreshTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_RefreshTreeActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_jMenuItem_RefreshTreeActionPerformed

    private void jButton_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_enterMouseClicked
        // TODO add your handling code here:
        String cmd = jTextField_commands.getText();
        if (cmd.startsWith("./load")) {
            String[] x = cmd.split(" ");
            File file = new File("./Archivos/" + x[1]);
            if (file !=null) {
                try {
                    importFile(file);
                } catch (FileNotFoundException ex) {
                    ex.printStackTrace();
                }
            }else{
                JOptionPane.showMessageDialog(this, "commando inexistente");
            }
            
        }else if(cmd.startsWith("./create")){
            String[] x = cmd.split(" ");
            try {
                
                if (x[2].equals("-single")) {
                    if (x[1].contains(".txt")) {
                        newFile(x[1]);
                    }
                    
                    
                }else{
                    JOptionPane.showMessageDialog(this, "commando inexistente");
                }
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }else if(cmd.equals("./refresh")){
            refresh();
        }else if(cmd.equals("./clear")){
            clear();
        }else{
            JOptionPane.showMessageDialog(this, "commando inexistente");
        }
    }//GEN-LAST:event_jButton_enterMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_enter;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_RefreshTree;
    private javax.swing.JMenuItem jMenuItem_clear;
    private javax.swing.JMenuItem jMenuItem_createNew;
    private javax.swing.JMenuItem jMenuItem_help_Commands;
    private javax.swing.JMenuItem jMenuItem_help_product;
    private javax.swing.JMenuItem jMenuItem_import;
    private javax.swing.JMenuItem jMenuItem_load;
    private javax.swing.JMenuItem jMenuItem_subWindows_clear_CMD;
    private javax.swing.JMenuItem jMenuItem_subwindow_refresh;
    private javax.swing.JMenu jMenu_file;
    private javax.swing.JMenu jMenu_help;
    private javax.swing.JMenu jMenu_subwindow_clear;
    private javax.swing.JMenu jMenu_window;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu_Table;
    private javax.swing.JPopupMenu jPopupMenu_tree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_file;
    private javax.swing.JTextField jTextField_commands;
    private javax.swing.JTree jTree_archivos;
    // End of variables declaration//GEN-END:variables
    
    public void newFile(String name) throws IOException{
        try {
            FileWriter fw = null;
            if (name.contains(".txt")) {
                fw = new FileWriter("./Archivos/"+name,false);
            }else{
                 fw = new FileWriter("./Archivos/"+name+".txt",false);
            }
            
            BufferedWriter bfw = new BufferedWriter(fw);
            DefaultTableModel x =(DefaultTableModel)jTable_file.getModel();
            
            for (int i = 0; i < x.getRowCount(); i++) {
                for (int j = 0; j < x.getColumnCount(); j++) {
                    if (  x.getValueAt(i, j)!=null && j!=x.getColumnCount()-1) {
                       bfw.write(x.getValueAt(i, j)+",");                                        
                    }else if(x.getValueAt(i, j)!=null){
                        bfw.write(x.getValueAt(i, j)+"");
                    }
                }
                bfw.newLine();
            }
            
            bfw.flush();
            JOptionPane.showMessageDialog(this, "Se creo su archivo");
            
            bfw.close();
            fw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void importFile(File f) throws FileNotFoundException{
        try{
            Scanner sc = new Scanner(f);
            DefaultTableModel x = (DefaultTableModel) jTable_file.getModel();
            x.setRowCount(0);
            while(sc.hasNextLine()){
                String line =sc.nextLine();
                if (line.isEmpty() == false) {
                    Object[] split = line.split(",");
                    x.addRow(split);
                }

            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Archivo no encontrado");
        }
    }
    
    public void clear(){
        DefaultTableModel x = (DefaultTableModel) jTable_file.getModel();
        x.setRowCount(0);
        x.setRowCount(20);
    }
    
    public void clearCMD(){
        jTextField_commands.setText("");
    }
    public void refresh(){
        File carpeta= new File("./Archivos");
        DefaultTreeModel model = (DefaultTreeModel) jTree_archivos.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) model.getRoot();
        File[] Archivos = carpeta.listFiles();
        for (File Archivo : Archivos) {
            DefaultMutableTreeNode archivo = new DefaultMutableTreeNode(Archivo);
            raiz.add(archivo);
        }
        model.reload();
    }
    
    
}
